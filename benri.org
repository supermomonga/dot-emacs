#+TITLE: init.org
#+OPTIONS: toc:2 num:nil ^:nil
#+LANGUAGE: ja

This is my kanari sugoi =.init.el= file(kanari).

* Use common lisp package

#+BEGIN_SRC emacs-lisp
(require 'cl)
#+END_SRC



* User-defined macro and function

#+BEGIN_SRC emacs-lisp
;; bundle macro
(defmacro bundle (name &rest body)
  `(when (require ,name nil t) ,@body))

;; Handle path variables benrily
(defun append-path (path)
  (setenv "PATH" (concat (file-truename path) ":" (getenv "PATH")))
  (setq eshell-path-env (getenv "PATH"))
  (setq exec-path (split-string (getenv "PATH") ":"))
  (print exec-path))

;; Notification center
(defun notif (title message)
  (shell-command
   (concat
    "echo 'display notification \"'"
    message
    "'\" with title \""
    title
    "\"' | osascript"))
  )
#+END_SRC


* Add some pathes

#+BEGIN_SRC emacs-lisp
;; rbenv
(append-path "~/.rbenv/bin/")
(append-path "~/.rbenv/shims/")

;; Homebrew toka.
(append-path "/usr/local/bin")

;; golang
(setenv "GOPATH" (file-truename "~/.go"))
(append-path (concat (getenv "GOPATH") "/bin"))
(append-path "/usr/local/Cellar/go/1.3.3/bin")
#+END_SRC

* Load secret settings
#+BEGIN_SRC emacs-lisp
(load "~/.emacs.d/secret.el" nil t)
#+END_SRC


